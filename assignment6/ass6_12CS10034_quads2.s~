0)  FUNCTION main:
1) _tmp000= A string address
2) param _tmp000
3) _tmp002 = call prints, 1
4) _tmp003 = &err
5) param _tmp003
6) _tmp005 = call readi, 1
7) a = _tmp005
8) _tmp006= A string address
9) param _tmp006
10) _tmp008 = call prints, 1
11) _tmp009 = &err
12) param _tmp009
13) _tmp011 = call readi, 1
14) b = _tmp011
15) _tmp012 = &a
16) _tmp013 = &b
17) param _tmp012
18) param _tmp013
19) call swap, 2
20) _tmp015= A string address
21) param _tmp015
22) _tmp017 = call prints, 1
23) param a
24) call printi, 1
25) _tmp019= A string address
26) param _tmp019
27) _tmp021 = call prints, 1
28) _tmp022= A string address
29) param _tmp022
30) _tmp024 = call prints, 1
31) param b
32) call printi, 1
33) _tmp026= A string address
34) param _tmp026
35) _tmp028 = call prints, 1
36) _tmp029 = 0
37) return _tmp029
38)  FUNCTION swap:
39) _tmp000 = *a
40) temp = _tmp000
41) _tmp001 = *b
42) *a = _tmp001
43) *b = temp
44) return
45) END of PROGRAM


.data
 STR1:
.string "Enter the value of a:"
STR2:
.string "Enter the value of b:"
STR3:
.string "The value of a:"
STR4:
.string "\n"
STR5:
.string "The value of b:"
STR6:
.string "\n"

.text
 .globl main
 .type main, @function
main:
pushl	%ebp
movl 	%esp,%ebp
subl	$92,%esp
movl $STR1, -20(%ebp)
movl -20(%ebp), %eax
pushl %eax
call prints
movl %eax, -24(%ebp)
leal -16(%ebp), %eax
movl %eax, -28(%ebp)
movl -28(%ebp), %eax
pushl %eax
call readi
movl %eax, -32(%ebp)
movl -32(%ebp), %eax
movl %eax, -8(%ebp)
movl $STR2, -36(%ebp)
movl -36(%ebp), %eax
pushl %eax
call prints
movl %eax, -40(%ebp)
leal -16(%ebp), %eax
movl %eax, -44(%ebp)
movl -44(%ebp), %eax
pushl %eax
call readi
movl %eax, -48(%ebp)
movl -48(%ebp), %eax
movl %eax, -12(%ebp)
leal -8(%ebp), %eax
movl %eax, -52(%ebp)
leal -12(%ebp), %eax
movl %eax, -56(%ebp)
movl -52(%ebp), %eax
pushl %eax
movl -56(%ebp), %eax
pushl %eax
call swap
movl $STR3, -60(%ebp)
movl -60(%ebp), %eax
pushl %eax
call prints
movl %eax, -64(%ebp)
movl -8(%ebp), %eax
pushl %eax
call printi
movl $STR4, -68(%ebp)
movl -68(%ebp), %eax
pushl %eax
call prints
movl %eax, -72(%ebp)
movl $STR5, -76(%ebp)
movl -76(%ebp), %eax
pushl %eax
call prints
movl %eax, -80(%ebp)
movl -12(%ebp), %eax
pushl %eax
call printi
movl $STR6, -84(%ebp)
movl -84(%ebp), %eax
pushl %eax
call prints
movl %eax, -88(%ebp)
movl $0, -92(%ebp)
movl -92(%ebp), %eax
movl %ebp,%esp
popl %ebp
ret
.globl swap
 .type swap, @function
swap:
pushl	%ebp
movl 	%esp,%ebp
subl	$16,%esp
movl 8(%ebp), %eax
movl (%eax), %eax
movl %eax, -12(%ebp)
movl -12(%ebp), %eax
movl %eax, -8(%ebp)
movl 12(%ebp), %eax
movl (%eax), %eax
movl %eax, -16(%ebp)
movl 8(%ebp), %eax
movl -16(%ebp), %edx
movl %edx, (%eax)
movl 12(%ebp), %eax
movl -8(%ebp), %edx
movl %edx, (%eax)
movl $0, %eax
movl %ebp,%esp
popl %ebp
ret
