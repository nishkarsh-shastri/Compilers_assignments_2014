.data
 STR1:
.string "Enter the first number: "
STR2:
.string "Enter the second number: "
STR3:
.string "Enter the third number: "
STR4:
.string "The max value is: "
STR5:
.string "\n"

.text
 .globl findmax
 .type findmax, @function
findmax:
pushl	%ebp
movl 	%esp,%ebp
subl	$20,%esp
movl 8(%ebp), %eax
movl %eax, -8(%ebp)
movl 12(%ebp), %eax
cmpl 8(%ebp), %eax
jg  .LBNO1
jmp  .LBNO2
.LBNO1:
movl $1, -12(%ebp)
jmp  .LBNO3
.LBNO2:
movl $0, -12(%ebp)
jmp  .LBNO4
jmp  .LBNO5
.LBNO3:
movl 12(%ebp), %eax
cmpl 16(%ebp), %eax
jg  .LBNO6
jmp  .LBNO7
.LBNO6:
movl $1, -16(%ebp)
jmp  .LBNO8
.LBNO7:
movl $0, -16(%ebp)
jmp  .LBNO9
jmp  .LBNO10
.LBNO8:
movl 12(%ebp), %eax
movl %eax, -8(%ebp)
jmp  .LBNO5
.LBNO9:
movl 16(%ebp), %eax
movl %eax, -8(%ebp)
jmp  .LBNO5
.LBNO10:
jmp  .LBNO5
.LBNO4:
movl 16(%ebp), %eax
cmpl 8(%ebp), %eax
jg  .LBNO11
jmp  .LBNO12
.LBNO11:
movl $1, -20(%ebp)
jmp  .LBNO13
.LBNO12:
movl $0, -20(%ebp)
jmp  .LBNO5
jmp  .LBNO14
.LBNO13:
movl 16(%ebp), %eax
movl %eax, -8(%ebp)
jmp  .LBNO5
.LBNO14:
jmp  .LBNO5
.LBNO5:
movl -8(%ebp), %eax
movl %ebp,%esp
popl %ebp
ret
.globl main
 .type main, @function
main:
pushl	%ebp
movl 	%esp,%ebp
subl	$96,%esp
movl $STR1, -24(%ebp)
movl -24(%ebp), %eax
pushl %eax
call prints
movl %eax, -28(%ebp)
leal -20(%ebp), %eax
movl %eax, -32(%ebp)
movl -32(%ebp), %eax
pushl %eax
call readi
movl %eax, -36(%ebp)
movl -36(%ebp), %eax
movl %eax, -8(%ebp)
movl $STR2, -40(%ebp)
movl -40(%ebp), %eax
pushl %eax
call prints
movl %eax, -44(%ebp)
leal -20(%ebp), %eax
movl %eax, -48(%ebp)
movl -48(%ebp), %eax
pushl %eax
call readi
movl %eax, -52(%ebp)
movl -52(%ebp), %eax
movl %eax, -12(%ebp)
movl $STR3, -56(%ebp)
movl -56(%ebp), %eax
pushl %eax
call prints
movl %eax, -60(%ebp)
leal -20(%ebp), %eax
movl %eax, -64(%ebp)
movl -64(%ebp), %eax
pushl %eax
call readi
movl %eax, -68(%ebp)
movl -68(%ebp), %eax
movl %eax, -16(%ebp)
movl -8(%ebp), %eax
pushl %eax
movl -12(%ebp), %eax
pushl %eax
movl -16(%ebp), %eax
pushl %eax
call findmax
movl %eax, -76(%ebp)
movl -76(%ebp), %eax
movl %eax, -72(%ebp)
movl $STR4, -80(%ebp)
movl -80(%ebp), %eax
pushl %eax
call prints
movl %eax, -84(%ebp)
movl -72(%ebp), %eax
pushl %eax
call printi
movl $STR5, -88(%ebp)
movl -88(%ebp), %eax
pushl %eax
call prints
movl %eax, -92(%ebp)
movl $0, -96(%ebp)
movl -96(%ebp), %eax
movl %ebp,%esp
popl %ebp
ret
